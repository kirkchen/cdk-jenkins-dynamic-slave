jenkins:
  securityRealm:
    local:
      allowsSignup: false
      users:
        - id: ${JENKINS_ADMIN_ID}
          password: ${JENKINS_ADMIN_PASSWORD}
  authorizationStrategy:
    globalMatrix:
      permissions:
        - "Overall/Administer:admin"
        - "Overall/Read:authenticated"
  clouds:
    - amazonEC2:
        cloudName: "dynamic"
        region: "ap-northeast-1"
        sshKeysCredentialsId: "keypair"
        useInstanceProfileForCredentials: false
        templates:
          - ami: ${AWS_JENKINS_WINDOWS_SLAVE_AMI}
            amiType:
              windowsData:
                password: ${AWS_JENKINS_WINDOWS_SLAVE_PASSWORD}
                specifyPassword: true
                useHTTPS: false
            description: "windows builder"
            labelString: "windows"
            remoteAdmin: ${AWS_JENKINS_WINDOWS_SLAVE_ACCOUNT}
            remoteFS: "c:\\jenkins"
            spotConfig:
              useBidPrice: false
            subnetId: ${AWS_JENKINS_WINDOWS_SLAVE_SUBNETS}
            tags:
              - name: "Name"
                value: "Jenkins-Dynamic-Windows"
            type: T3Medium
security:
  queueItemAuthenticator:
    authenticators:
      - global:
          strategy: triggeringUsersAuthorizationStrategy
credentials:
  system:
    domainCredentials:
      - credentials:
          - usernamePassword:
              scope: GLOBAL
              id: "github-token"
              username: ${GITHUB_USERNAME}
              password: ${GITHUB_TOKEN}
          - basicSSHUserPrivateKey:
              scope: GLOBAL
              id: "keypair"
              username: "jenkins"
              privateKeySource:
                directEntry:
                  privateKey: ${AWS_KEYPAIR}
unclassified:
  location:
    url: ${JENKINS_HOST}
jobs:
  - script: >
      job('Seed') {
        quietPeriod(0)
        concurrentBuild(false)
        logRotator {
          numToKeep(5)
        }
        scm {
          git {
            branch('*/main')
            remote {
              github('${GITHUB_REPO}', 'https')
              credentials('github-token')            }
          }
        }
        steps {
          jobDsl {
            targets 'jobs/**/*.groovy'
          }
        }
      }
